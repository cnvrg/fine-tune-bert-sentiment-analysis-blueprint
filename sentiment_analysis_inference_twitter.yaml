# Copyright (c) 2023 Intel Corporation
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
# SPDX-License-Identifier: MIT

---
title: Twitter BERT Inference # Required on creation, replaces the "flow" parameter
version: 1.0.0 # Required
description: Analyze sentiment analysis in text
long_description: This blueprint allows you to deploy a ready to use endpoint that can analyse sentiment twitter
# Optional properties for crediting authors
author: "cnvrg"
author_email: "info@cnvrg.io"

# At least one tag [inference, training, data] must be present
tags:
  - training
  - nlp

# List of tasks (libraries)
tasks:
  - title: Twitter Connector
    top: 300
    left: 0

    # Type must be according to the flow task conventions (data, exec, deploy)
    type: exec

    # The library data
    library: twitter-connector
    library_version: 1.0.16

    # The flattened library parameters (in this case we have training library)
    command: python3 pull_twitter_data.py

    requirements:
      cpu: 1.5
      memory: 2
      gpu: 0
      hpu: 0

    image: python:3.8
    language: python3

    # The "arguments" property changes to "params", rest remains the same.
    # Params in the blueprint yaml can be used to override the arguments in the library.
    params:
      - key: token
        type: 'categorical'
        values:
        - ''
      - key: term
        type: 'categorical'
        values:
          - 'World Cup'
      - key: dataset
        type: 'categorical'
        values:
          - ''
      - key: output_file
        type: 'categorical'
        values:
          - 'twitts_worldcup.csv'
      - key: max_twitts
        type: 'discrete'
        values:
          - '100'
      - key: end_point
        type: 'categorical'
        values:
          - 'recent'
      - key: days_back
        type: 'discrete'
        values:
          - '3'

  - title: FT Batch Predict
    top: 300
    left: 400

    # Type must be according to the flow task conventions (data, exec, deploy)
    type: exec

    # The library data
    library: ft-batch-predict
    library_version: 1.0.16

    # The flattened library parameters (in this case we have training library)
    command: python3 fine-tune-inference.py

    requirements:
      cpu: 3.5
      memory: 8
      gpu: 0
      hpu: 0

    image: python:3.8
    language: python3

    # The "arguments" property changes to "params", rest remains the same.
    # Params in the blueprint yaml can be used to override the arguments in the library.
    params:
      - key: input_filename
        type: 'categorical'
        values:
        - '/input/twitter_connector/twitts_worldcup.csv'
      - key: model_path
        type: 'categorical'
        values:
        - './checkpoint-50'
      - key: result_path
        type: 'categorical'
        values:
          - '/cnvrg'
      - key: text_column
        type: 'categorical'
        values:
          - 'text'
relations:
  - from: Twitter Connector
    to: FT Batch Predict